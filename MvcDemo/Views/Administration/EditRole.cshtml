@model MvcDemo.Models.EditRoleViewModel

@{
    ViewData["Title"] = "EditRole";
}

<h1>EditRole</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form method=post>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control mt-1" disabled/>
            </div>
            <div class="form-group">
                <label asp-for="RoleName" class="control-label mt-3"></label>
                <input asp-for="RoleName" class="form-control mt-1" />
                <span asp-validation-for="RoleName" class="text-danger mt-1"></span>
            </div>
            <div class="form-group my-3">
                <input type="submit" value="Update" class="btn btn-primary" />
                <a asp-action="ListRoles" asp-controller="Administration" class="btn btn-danger">Cancel</a>
            </div>

            <div class="card mt-5">
              <div class="card-header">Users in this Role</div>
              <div class="card-body">
                  @if(Model.Users.Any())
                    {
                        foreach(var user in Model.Users)
                        {
                            <h3 class="card-title">@user</h3>
                        }
                    }
                    else
                    {
                        <h3 class="card-title">None at a moment</h3>
                    }
                    <a asp-action="EditUsersInRole" asp-controller="Administration" asp-route-roleId=@Model.Id class="btn btn-primary mt-2">Add/Remove Users</a>
              </div>
            </div>
        </form>
    </div>
</div>

<div>
    
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
